================================================================================
[X01] [Mocha] JSコードのテスト(1)
[X02] [Mocha] JSコードのテスト(2)
[001] Learn How JavaScript Assertions Work
[002] Test if a Variable or Function is Defined
[003] Use Assert.isOK and Assert.isNotOK
[004] Test for Truthiness
[005] Use the Double Equals to Assert Equality
[006] Use the Triple Equals to Assert Strict Equality
[007] Assert Deep Equality with .deepEqual and .notDeepEqual
[008] Compare the Properties of Two Elements
[009] Test if One Value is Below or At Least as Large as Another
[010] Test if a Value Falls within a Specific Range
[011] Test if a Value is an Array
[012] Test if an Array Contains an Item
[013] Test if a Value is a String
[014] Test if a String Contains a Substring
[015] Use Regular Expressions to Test a String
[016] Test if an Object has a Property
[017] Test if a Value is of a Specific Data Structure Type
[018] Test if an Object is an Instance of a Constructor
[019] Run Functional Tests on API Endpoints using Chai-HTTP
[020] Run Functional Tests on API Endpoints using Chai-HTTP II
[021] Run Functional Tests on an API Response using Chai-HTTP III - PUT method
[022] Run Functional Tests on an API Response using Chai-HTTP IV - PUT method
[023] Simulate Actions Using a Headless Browser
[024] Run Functional Tests using a Headless Browser
[025] Run Functional Tests using a Headless Browser II
================================================================================
[X01]
  [Mocha] JSコードのテスト(1)
  
[内容]
  テスティングフレームワーク「Mocha」でJSコードのテスト
    ただし「Node」内ではなくブラウザ内でテストを行う
  
[確認]
  # cd $HOME
  # systemctl start httpd
  
  コマンドの実行結果
  --------------------------------------------------
  (ローカルで「Webサーバー」を起動)
  --------------------------------------------------
  
  # cd /var/www/html
  # sudo vi mod/mod01.js => モジュールのエクスポートのコードを入れたがインポート側の失敗で削除
  
  コマンドの実行結果
  --------------------------------------------------
  const myAdd1 = (x, y) => x + y;
  const mySub1 = (x, y) => x - y;
  const myMul1 = (x, y) => x * y;
  const myDiv1 = (x, y) => x / y;
  --------------------------------------------------
  
  # cd /var/www/html
  # sudo vi mod/mod02.js => モジュールのエクスポートのコードを入れたがインポート側の失敗で削除
  
  コマンドの実行結果
  --------------------------------------------------
  const myAdd2 = (x, y) => x += y;
  const mySub2 = (x, y) => x -= y;
  const myMul2 = (x, y) => x *= y;
  const myDiv2 = (x, y) => x /= y;
  --------------------------------------------------
  
  # cd /var/www/html
  # sudo vi test/test01.js => モジュールのインポートのコードを入れたが上手く動かず削除
  
  コマンドの実行結果
  --------------------------------------------------
  describe('mod01.js', () => {
    describe('myAdd1', () => {
      it('120 + 2', () => {
        assert.equal(myAdd1(120, 2), 122);
      });
    });
    describe('mySub1', () => {
      it('120 - 2', () => {
        assert.equal(mySub1(120, 2), 118);
      });
    });
    describe('myMul1', () => {
      it('120 * 2', () => {
        assert.equal(myMul1(120, 2), 240);
      });
    });
    describe('myDiv1', () => {
      it('120 / 2', () => {
        assert.equal(myDiv1(120, 2), 60);
      });
    });
  });
  --------------------------------------------------
  
  # cd /var/www/html
  # sudo vi test/test02.js => モジュールのインポートのコードを入れたが上手く動かず削除
  
  コマンドの実行結果
  --------------------------------------------------
  describe('mod02.js', () => {
    describe('myAdd2', () => {
      it('120 += 2', () => {
        assert.equal(myAdd2(120, 2), 122);
      });
    });
    describe('mySub2', () => {
      it('120 -= 2', () => {
        assert.equal(mySub2(120, 2), 118);
      });
    });
    describe('myMul2', () => {
      it('120 *= 2', () => {
        assert.equal(myMul2(120, 2), 240);
      });
    });
    describe('myDiv2', () => {
      it('120 /= 2', () => {
        assert.equal(myDiv2(120, 2), 60);
      });
    });
  });
  --------------------------------------------------
  
  # cd /var/www/html
  # sudo vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  
  <!-- Mocha CSS --->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/mocha/3.2.0/mocha.css">
  
  <title>Mocha Sample</title>
  </head>
  <body>
  
  <!-- Mocha Result --->
  <div id="mocha"></div>
  
  <!-- Mocha Loading --->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/mocha/3.2.0/mocha.js"></script>
  
  <!-- Chai Loading --->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/chai/3.5.0/chai.js"></script>
  
  <!-- Test Module --->
  <script src="./mod/mod01.js"></script>
  <script src="./mod/mod02.js"></script>
  
  <script>
    mocha.setup('bdd');
    var assert = chai.assert;
  </script>
  
  <!-- Test Script Loading --->
  <script src="./test/test01.js"></script>
  <script src="./test/test02.js"></script>
  
  <!-- Test Start --->
  <script>mocha.run();</script>
  
  </body>
  </html>
  --------------------------------------------------
  
  $ firefox
  $ http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  mod01.js
    myAdd1
      ✔ 120 + 2
    mySub1
      ✔ 120 - 2
    myMul1
      ✔ 120 * 2
    myDiv1
      ✔ 120 / 2
  
  mod02.js
    myAdd2
      ✔ 120 += 2
    mySub2
      ✔ 120 -= 2
    myMul2
      ✔ 120 *= 2
    myDiv2
      ✔ 120 /= 2
  --------------------------------------------------
  
  以下の記録に続く
  
================================================================================
[X02]
  [Mocha] JSコードのテスト(2)
  
[内容]
  テスティングフレームワーク「Mocha」でJSコードのテスト
    今回は「Node」内でテストを行う
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/cha01
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/cha01
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/cha01
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myAdd1 = (x, y) => x + y;
  exports.mySub1 = (x, y) => x - y;
  exports.myMul1 = (x, y) => x * y;
  exports.myDiv1 = (x, y) => x / y;
  --------------------------------------------------
  
  # cd $HOME/cha01
  # vi test/mod02.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myAdd2 = (x, y) => x += y;
  exports.mySub2 = (x, y) => x -= y;
  exports.myMul2 = (x, y) => x *= y;
  exports.myDiv2 = (x, y) => x /= y;
  --------------------------------------------------
  
  # cd $HOME/cha01
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myAdd1', () => {
      it('120 + 2', () => {
        assert.equal(myMod1.myAdd1(120, 2), 122);
      });
    });
    describe('mySub1', () => {
      it('120 - 2', () => {
        assert.equal(myMod1.mySub1(120, 2), 118);
      });
    });
    describe('myMul1', () => {
      it('120 * 2', () => {
        assert.equal(myMod1.myMul1(120, 2), 240);
      });
    });
    describe('myDiv1', () => {
      it('120 / 2', () => {
        assert.equal(myMod1.myDiv1(120, 2), 60);
      });
    });
  });
  --------------------------------------------------
  
  # cd $HOME/cha01
  # vi test02.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod2 = require('./test/mod02');
  
  describe('mod02.js', () => {
    describe('myAdd2', () => {
      it('120 += 2', () => {
        assert.equal(myMod2.myAdd2(120, 2), 122);
      });
    });
    describe('mySub2', () => {
      it('120 -= 2', () => {
        assert.equal(myMod2.mySub2(120, 2), 118);
      });
    });
    describe('myMul2', () => {
      it('120 *= 2', () => {
        assert.equal(myMod2.myMul2(120, 2), 240);
      });
    });
    describe('myDiv2', () => {
      it('120 /= 2', () => {
        assert.equal(myMod2.myDiv2(120, 2), 60);
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/cha01
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "cha01",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test01": "./node_modules/.bin/mocha test01.js --reporter spec",  // テスト時は「npm run test01」を実行
      "test02": "./node_modules/.bin/mocha test02.js --reporter spec"   // テスト時は「npm run test02」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/cha01
  $ npm run test01
  
  コマンドの実行結果
  --------------------------------------------------
  > cha01@1.0.0 test01
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myAdd1
      ✔ 120 + 2
    mySub1
      ✔ 120 - 2
    myMul1
      ✔ 120 * 2
    myDiv1
      ✔ 120 / 2
  
  4 passing (21ms)
  --------------------------------------------------
  
  $ cd $HOME/cha01
  $ npm run test02
  
  コマンドの実行結果
  --------------------------------------------------
  > cha01@1.0.0 test02
  > ./node_modules/.bin/mocha test02.js --reporter spec
  
  mod02.js
    myAdd2
      ✔ 120 += 2
    mySub2
      ✔ 120 -= 2
    myMul2
      ✔ 120 *= 2
    myDiv2
      ✔ 120 /= 2
  
  4 passing (41ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[001]
  Learn How JavaScript Assertions Work
  
[内容]
  対象(P1)は Null
  ・メソッド「assert」=> assert.isNull(P1);
  ・メソッド「expect」=> expect(P1).to.be.null;
  
  対象(P1)は Not Null
  ・メソッド「assert」=> assert.isNotNull(P1);
  ・メソッド「expect」=> expect(P1).to.not.be.null;
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst01
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst01
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst01
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst01
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 is NULL', () => {
        let P1 = null;
        assert.isNull(myMod1.myFunc(P1));
      });
      it('P2 is NULL', () => {
        let P2 = null;
        expect(myMod1.myFunc(P2)).to.be.null;
      });
      it('P3 is not NULL', () => {
        let P3 = 'AAA';
        assert.isNotNull(myMod1.myFunc(P3));
      });
      it('P4 is not NULL', () => {
        let P4 = 'AAA';
        expect(myMod1.myFunc(P4)).to.not.be.null;
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst01
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst01",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst01
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst01@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 is NULL
      ✔ P2 is NULL
      ✔ P3 is not NULL
      ✔ P4 is not NULL
  
  4 passing (23ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[002]
  Test if a Variable or Function is Defined
  
[内容]
  対象(P1)は未定義
  ・メソッド「assert」=> assert.isUndefined(P1);
  ・メソッド「expect」=> expect(P1).to.be.undefined;
  
  対象(P1)は未定義でない
  ・メソッド「assert」=> assert.isDefined(P1);
  ・メソッド「expect」=> expect(P1).to.not.be.undefined;
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst02
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst02
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst02
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst02
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 is Undefined', () => {
        let P1;  // データ未定義で「Undefined」となる
        assert.isUndefined(myMod1.myFunc(P1));
      });
      it('P2 is Undefined', () => {
        let P2;  // データ未定義で「Undefined」となる
        expect(myMod1.myFunc(P2)).to.be.undefined;
      });
      it('P3 is not Undefined', () => {
        let P3 = 100;
        assert.isDefined(myMod1.myFunc(P3));
      });
      it('P4 is not Undefined', () => {
        let P4 = 100;
        expect(myMod1.myFunc(P4)).to.not.be.undefined;
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst02
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst02",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst02
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst02@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 is Undefined
      ✔ P2 is Undefined
      ✔ P3 is not Undefined
      ✔ P4 is not Undefined
  
  4 passing (17ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[003]
  Use Assert.isOK and Assert.isNotOK
  
[内容]
  対象(P1)は真(true)
  ・メソッド「assert」=> assert.isOk(P1);
  ・メソッド「expect」=> expect(P1).to.be.ok;
  
  対象(P1)は真(false)
  ・メソッド「assert」=> assert.isNotOk(P1);
  ・メソッド「expect」=> expect(P1).to.not.be.ok;
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst03
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst03
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst03
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst03
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 is OK', () => {
        let P1 = true;
        assert.isOk(myMod1.myFunc(P1));
      });
      it('P2 is OK', () => {
        let P2 = true;
        expect(myMod1.myFunc(P2)).to.be.ok;
      });
      it('P3 is not OK', () => {
        let P3 = false;
        assert.isNotOk(myMod1.myFunc(P3));
      });
      it('P4 is not OK', () => {
        let P4 = false;
        expect(myMod1.myFunc(P4)).to.not.be.ok;
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst03
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst03",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst03
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst03@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 is OK
      ✔ P2 is OK
      ✔ P3 is not OK
      ✔ P4 is not OK
  
  4 passing (19ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[004]
  Test for Truthiness
  
[内容]
  対象(P1)は真(true)
  ・メソッド「assert」=> assert.isTrue(P1);
  ・メソッド「expect」=> expect(P1).to.be.true;
  
  対象(P1)は偽(false)
  ・メソッド「assert」=> assert.isFalse(P1);
  ・メソッド「expect」=> expect(P1).to.be.false;
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst04
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst04
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst04
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst04
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 is True', () => {
        let P1 = true;
        assert.isTrue(myMod1.myFunc(P1));
      });
      it('P2 is True', () => {
        let P2 = true;
        expect(myMod1.myFunc(P2)).to.be.true;
      });
      it('P3 is False', () => {
        let P3 = false;
        assert.isFalse(myMod1.myFunc(P3));
      });
      it('P4 is False', () => {
        let P4 = false;
        expect(myMod1.myFunc(P4)).to.be.false;
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst04
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst04",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst04
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst04@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 is True
      ✔ P2 is True
      ✔ P3 is False
      ✔ P4 is False
  
  4 passing (21ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[005]
  Use the Double Equals to Assert Equality
  
[内容]
  数値(P1)と数値(P2)は等価
  ・メソッド「assert」=> assert.equal(P1, P2);
  ・メソッド「expect」=> expect(P1).to.equal(P2);
  
  数値(P1)と数値(P2)は等価でない
  ・メソッド「assert」=> assert.notEqual(P1, P2);
  ・メソッド「expect」=> expect(P1).to.not.equal(P2);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst05
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst05
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst05
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst05
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 == 100', () => {
        let P1 = 100;
        assert.equal(myMod1.myFunc(P1), 100);
      });
      it('P2 == 100', () => {
        let P2 = 100;
        expect(myMod1.myFunc(P2)).to.equal(100);
      });
      it('P3 != 100', () => {
        let P3 = 199;
        assert.notEqual(myMod1.myFunc(P3), 100);
      });
      it('P4 != 100', () => {
        let P4 = 199;
        expect(myMod1.myFunc(P4)).to.not.equal(100);
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst05
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst05",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst05
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst05@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 == 100
      ✔ P2 == 100
      ✔ P3 != 100
      ✔ P4 != 100
  
  4 passing (23ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[006]
  Use the Triple Equals to Assert Strict Equality
  
[内容]
  数値(P1)と数値(P2)は等価
  ・メソッド「assert」=> assert.strictEqual(P1, P2);
  ・メソッド「expect」=> expect(P1).to.deep.equal(P2);

  数値(P1)と数値(P2)は等価でない
  ・メソッド「assert」=> assert.notStrictEqual(P1, P2);
  ・メソッド「expect」=> expect(P1).to.not.deep.equal(P2);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst06
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst06
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst06
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst06
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 === 100', () => {
        let P1 = 100;
        assert.strictEqual(myMod1.myFunc(P1), 100);
      });
      it('P2 === 100', () => {
        let P2 = 100;
        expect(myMod1.myFunc(P2)).to.deep.equal(100);
      });
      it('P3 !== 100', () => {
        let P3 = 199;
        assert.notStrictEqual(myMod1.myFunc(P3), 100);
      });
      it('P4 !== 100', () => {
        let P4 = 199;
        expect(myMod1.myFunc(P4)).to.not.deep.equal(100);
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst06
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst06",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst06
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst06@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 === 100
      ✔ P2 === 100
      ✔ P3 !== 100
      ✔ P4 !== 100
  
  4 passing (25ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[007]
  Assert Deep Equality with .deepEqual and .notDeepEqual
  
[内容]
  オブジェクト(OBJ1)とオブジェクト(OBJ2)は同一
  ・メソッド「assert」=> assert.deepEqual(OBJ1, OBJ2);
  ・メソッド「expect」=> expect(OBJ1).to.deep.equal(OBJ2);
  
  オブジェクト(OBJ1)とオブジェクト(OBJ2)は同一でない
  ・メソッド「assert」=> assert.notDeepEqual(OBJ1, OBJ2);
  ・メソッド「expect」=> expect(OBJ1).to.not.deep.equal(OBJ2);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst07
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst07
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst07
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst07
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  const OBJ1 = {
    key1: 'AAA',
    key2: 'BBB',
  };
  
  const OBJ2 = {
    key1: 'AAA',
    key2: 'BBB',
  };
  
  const OBJ3 = {
    key1: 'AAA',
    key2: 'CCC',
  };
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 === OBJ2', () => {
        let P1 = OBJ1;
        assert.deepEqual(myMod1.myFunc(P1), OBJ2);
      });
      it('P2 === OBJ2', () => {
        let P2 = OBJ1;
        expect(myMod1.myFunc(P2)).to.deep.equal(OBJ2);
      });
      it('P3 !== OBJ3', () => {
        let P3 = OBJ1;
        assert.notDeepEqual(myMod1.myFunc(P3), OBJ3);
      });
      it('P4 !== OBJ3', () => {
        let P4 = OBJ1;
        expect(myMod1.myFunc(P4)).to.not.deep.equal(OBJ3);
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst07
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst07",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst07
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst07@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 === OBJ2
      ✔ P2 === OBJ2
      ✔ P3 !== OBJ3
      ✔ P4 !== OBJ3
  
  4 passing (28ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[008]
  Compare the Properties of Two Elements
  
[内容]
  数値(P1)は数値(P2)より大きい
  ・メソッド「assert」=> assert.isAbove(P1, P2);
  ・メソッド「expect」=> expect(P1).to.be.above(P2);
  
  数値(P1)は数値(P2)以下
  ・メソッド「assert」=> assert.isAtMost(P1, P2);
  ・メソッド「expect」=> expect(P1).to.be.at.most(P2);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst08
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst08
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst08
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst08
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 > 100', () => {
        let P1 = 199;
        assert.isAbove(myMod1.myFunc(P1), 100);
      });
      it('P2 > 100', () => {
        let P2 = 199;
        expect(myMod1.myFunc(P2)).to.be.above(100);
      });
      it('P3 <= 199', () => {
        let P3 = 100;
        assert.isAtMost(myMod1.myFunc(P3), 199);
      });
      it('P4 <= 199', () => {
        let P4 = 100;
        expect(myMod1.myFunc(P4)).to.be.at.most(199);
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst08
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst08",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst08
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst08@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 >  100
      ✔ P2 >  100
      ✔ P3 <= 199
      ✔ P4 <= 199
  
  4 passing (30ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[009]
  Test if One Value is Below or At Least as Large as Another
  
[内容]
  数値(P1)は数値(P2)未満
  ・メソッド「assert」=> assert.isBelow(P1, P2);
  ・メソッド「expect」=> expect(P1).to.be.below(P2);
  
  数値(P1)は数値(P2)以上
  ・メソッド「assert」=> assert.isAtLeast(P1, P2);
  ・メソッド「expect」=> expect(P1).to.be.at.least(P2);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst09
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst09
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst09
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst09
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 < 199', () => {
        let P1 = 100;
        assert.isBelow(myMod1.myFunc(P1), 199);
      });
      it('P2 < 199', () => {
        let P2 = 100;
        expect(myMod1.myFunc(P2)).to.be.below(199);
      });
      it('P3 >= 100', () => {
        let P3 = 199;
        assert.isAtLeast(myMod1.myFunc(P3), 100);
      });
      it('P4 >= 100', () => {
        let P4 = 199;
        expect(myMod1.myFunc(P4)).to.be.at.least(100);
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst09
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst09",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst09
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst09@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 <  199
      ✔ P2 <  199
      ✔ P3 >= 100
      ✔ P4 >= 100
  
  4 passing (30ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[010]
  Test if a Value Falls within a Specific Range
  
[内容]
  数値(P1)が数値(P2)から範囲(P3)の範囲内
  ・メソッド「assert」=> assert.approximately(P1, P2, P3);
  ・メソッド「expect」=> expect(P1).to.be.closeTo(P2, P3);
  
  数値(P1)が数値(P2)から範囲(P3)の範囲外
  ・メソッド「assert」=> 該当コードなし
  ・メソッド「expect」=> expect(P1).not.to.be.closeTo(P2, P3);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst10
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst10
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst10
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst10
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 is in the range of 150 to 30', () => {
        let P1 = 130;
        assert.approximately(myMod1.myFunc(P1), 150, 30);
      });
      it('P2 is in the range of 150 to 30', () => {
        let P2 = 130;
        expect(myMod1.myFunc(P2)).to.be.closeTo(150, 30);
      });
     /** 
      ** 該当コードなし
      ** 調査が甘い可能性もある
      **/ 
      it('P3 is not in the range of 150 to 30', () => {
        let P3 = 110;
        expect(myMod1.myFunc(P3)).not.to.be.closeTo(150, 30);
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst10
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst10",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst10
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst10@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 is in the range of 150 to 30
      ✔ P2 is in the range of 150 to 30
      ✔ P3 is not in the range of 150 to 30
  
  3 passing (33ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[011]
  Test if a Value is an Array
  
[内容]
  対象(P1)が配列
  ・メソッド「assert」=> assert.isArray(P1);
  ・メソッド「expect」=> expect(P1).to.be.an('array');

  対象(P1)が配列でない
  ・メソッド「assert」=> assert.isNotArray(P1);
  ・メソッド「expect」=> expect(P1).to.not.be.an('array');
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst11
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst11
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst11
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst11
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 is Array', () => {
        let P1 = [ 10, 20, 30, 40 ];
        assert.isArray(myMod1.myFunc(P1));
      });
      it('P2 is Array', () => {
        let P2 = [ 10, 20, 30, 40 ];
        expect(myMod1.myFunc(P2)).to.be.an('array');
      });
      it('P3 is not Array', () => {
        let P3 = 10;
        assert.isNotArray(myMod1.myFunc(P3));
      });
      it('P4 is not Array', () => {
        let P4 = 10;
        expect(myMod1.myFunc(P4)).to.not.be.an('array');
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst11
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst11",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst11
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst11@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 is Array
      ✔ P2 is Array
      ✔ P3 is not Array
      ✔ P4 is not Array
  
  4 passing (24ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[012]
  Test if an Array Contains an Item
  
[内容]
  配列(P1)に対象(P2)が含まれている
  ・メソッド「assert」=> assert.include(P1, P2);
  ・メソッド「expect」=> expect(P1).to.be.an('array').that.includes(P2);
  
  配列(P1)に対象(P2)が含まれていない
  ・メソッド「assert」=> assert.notInclude(P1, P2);
  ・メソッド「expect」=> expect(P1).to.be.an('array').that.not.includes(P2);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst12
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst12
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst12
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst12
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  const ARR = [ 10, 20, 30, 40 ];
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 is Included in Array', () => {
        let P1 = 10;
        assert.include(ARR, myMod1.myFunc(P1));
      });
      it('P2 is Included in Array', () => {
        let P2 = 10;
        expect(ARR).to.be.an('array').that.includes(myMod1.myFunc(P2));
      });
      it('P3 is not Included in Array', () => {
        let P3 = 99;
        assert.notInclude(ARR, myMod1.myFunc(P3));
      });
      it('P4 is not Included in Array', () => {
        let P4 = 99;
        expect(ARR).to.be.an('array').that.not.includes(myMod1.myFunc(P4));
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst12
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst12",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst12
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst12@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 is Included in Array
      ✔ P2 is Included in Array
      ✔ P3 is not Included in Array
      ✔ P4 is not Included in Array
  
  4 passing (29ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[013]
  Test if a Value is a String
  
[内容]
  対象(P1)が文字列
  ・メソッド「assert」=> assert.isString(P1);
  ・メソッド「expect」=> expect(P1).to.be.a('string');
  
  対象(P1)が文字列でない
  ・メソッド「assert」=> assert.isNotString(P1);
  ・メソッド「expect」=> expect(P1).to.not.be.a('string');
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst13
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst13
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst13
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst13
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 is String', () => {
        let P1 = '10';
        assert.isString(myMod1.myFunc(P1));
      });
      it('P2 is String', () => {
        let P2 = '10';
        expect(myMod1.myFunc(P2)).to.be.a('string');
      });
      it('P3 is not String', () => {
        let P3 = 1000;
        assert.isNotString(myMod1.myFunc(P3));
      });
      it('P4 is not String', () => {
        let P4 = 1000;
        expect(myMod1.myFunc(P4)).to.not.be.a('string');
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst13
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst13",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst13
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst13@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 is String
      ✔ P2 is String
      ✔ P3 is not String
      ✔ P4 is not String
  
  4 passing (26ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[014]
  Test if a String Contains a Substring
  
[内容]
  文字列(P1)に文字列(P2)が含まれている
  ・メソッド「assert」=> assert.include(P1, P2);
  ・メソッド「expect」=> expect(P1).to.be.a('string').that.includes(P2);
  
  文字列(P1)に文字列(P2)が含まれていない
  ・メソッド「assert」=> assert.notInclude(P1, P2);
  ・メソッド「expect」=> expect(P1).to.be.a('string').that.not.includes(P2);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst14
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst14
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst14
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst14
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 includes AA', () => {
        let P1 = 'AABBCCDDEEFF';
        assert.include(myMod1.myFunc(P1), 'AA');
      });
      it('P2 includes AA', () => {
        let P2 = 'AABBCCDDEEFF';
        expect(myMod1.myFunc(P2)).to.be.a('string').that.includes('AA');
      });
      it('P3 does not include ZZ', () => {
        let P3 = 'AABBCCDDEEFF';
        assert.notInclude(myMod1.myFunc(P3), 'ZZ');
      });
      it('P4 does not include ZZ', () => {
        let P4 = 'AABBCCDDEEFF';
        expect(myMod1.myFunc(P4)).to.be.a('string').that.not.includes('ZZ');
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst14
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst14",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst14
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst14@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 includes AA
      ✔ P2 includes AA
      ✔ P3 does not include ZZ
      ✔ P4 does not include ZZ
  
  4 passing (26ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[015]
  Use Regular Expressions to Test a String
  
[内容]
  文字列(P1)が正規表現(P2)に合致する
  ・メソッド「assert」=> assert.match(P1, P2);
  ・メソッド「expect」=> expect(P1).to.match(P2);
  
  文字列(P1)が正規表現(P2)に合致しない
  ・メソッド「assert」=> assert.notMatch(P1, P2);
  ・メソッド「expect」=> expect(P1).to.not.match(P2);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst15
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst15
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst15
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst15
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 matchs /AA/', () => {
        let P1 = 'AABBCCDDEEFF';
        assert.match(myMod1.myFunc(P1), /AA/);
      });
      it('P2 matchs /AA/', () => {
        let P2 = 'AABBCCDDEEFF';
        expect(myMod1.myFunc(P2)).to.match(/AA/);
      });
      it('P3 does not match /ZZ/', () => {
        let P3 = 'AABBCCDDEEFF';
        assert.notMatch(myMod1.myFunc(P3), /ZZ/);
      });
      it('P4 does not match /ZZ/', () => {
        let P4 = 'AABBCCDDEEFF';
        expect(myMod1.myFunc(P4)).not.to.match(/ZZ/);
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst15
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst15",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst15
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst15@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 matchs /AA/
      ✔ P2 matchs /AA/
      ✔ P3 does not match /ZZ/
      ✔ P4 does not match /ZZ/
  
  4 passing (41ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[016]
  Test if an Object has a Property
  
[内容]
  オブジェクト(OBJ)に属性(P1)が存在する
  ・メソッド「assert」=> assert.property(OBJ1, P1);
  ・メソッド「expect」=> expect(OBJ1).to.have.property(P1);
  
  オブジェクト(OBJ)に属性(P1)が存在しない
  ・メソッド「assert」=> assert.notProperty(OBJ1, P1);
  ・メソッド「expect」=> expect(OBJ1).to.not.have.property(P1);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst16
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst16
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst16
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst16
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  const OBJ = {
    key1: 'AAA',
    key2: 'BBB',
  };
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 has property key2', () => {
        let P1 = OBJ;
        assert.property(P1, 'key2');
      });
      it('P2 has property key2', () => {
        let P2 = OBJ;
        expect(P2).to.have.property('key2');
      });
      it('P3 does not have property key3', () => {
        let P3 = OBJ;
        assert.notProperty(P3, 'key3');
      });
      it('P4 does not have property key3', () => {
        let P4 = OBJ;
        expect(P4).to.not.have.property('key3');
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst16
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst16",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst16
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst16@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 has property key2
      ✔ P2 has property key2
      ✔ P3 does not have property key3
      ✔ P4 does not have property key3
  
  4 passing (26ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[017]
  Test if a Value is of a Specific Data Structure Type
  
[内容]
  データ(P1)とデータ型(P2)が合致する
  ・メソッド「assert」=> assert.typeOf(P1, P2);
  ・メソッド「expect」=> expect(P1).to.be.a(P2);
  
  データ(P1)とデータ型(P2)が合致しない
  ・メソッド「assert」=> assert.notTypeOf(P1, P2);
  ・メソッド「expect」=> expect(P1).to.not.be.a(P2);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst17
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst17
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst17
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  exports.myFunc = (val) => val;
  --------------------------------------------------
  
  # cd $HOME/tst17
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const myMod1 = require('./test/mod01');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 is number', () => {
        let P1 = 100;
        assert.typeOf(myMod1.myFunc(P1), 'number');
      });
      it('P2 is number', () => {
        let P2 = 100;
        expect(myMod1.myFunc(P2)).to.be.a('number');
      });
      it('P3 is not number', () => {
        let P3 = '10';
        assert.notTypeOf(myMod1.myFunc(P3), 'number');
      });
      it('P4 is not number', () => {
        let P4 = '10';
        expect(myMod1.myFunc(P4)).to.not.be.a('number');
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst17
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst17",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst17
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst17@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 is number
      ✔ P2 is number
      ✔ P3 is not number
      ✔ P4 is not number
  
  4 passing (26ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[018]
  Test if an Object is an Instance of a Constructor
  
[内容]
  変数(P1)はオブジェクト(OBJ)のインスタンス
  ・メソッド「assert」=> assert.instanceOf(P1, OBJ);
  ・メソッド「expect」=> expect(P1).to.be.an.instanceOf(OBJ);
  
  変数(P1)はオブジェクト(OBJ)のインスタンスではない
  ・メソッド「assert」=> assert.notInstanceOf(P1, OBJ);
  ・メソッド「expect」=> expect(P1).to.not.be.an.instanceOf(OBJ);
  
[確認]
  $ cd $HOME
  $ node --version
  
  コマンドの実行結果
  --------------------------------------------------
  v16.15.00 => 問題なし
  --------------------------------------------------
  
  $ cd $HOME/tst18
  $ npm init
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) => 後の「package.json」を参照
  --------------------------------------------------
  
  $ cd $HOME/tst18
  $ npm install mocha chai --save
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ディレクトリ「node_modules」内にインストール、ファイル「package.json」に依存関係が記述される
  --------------------------------------------------
  
  # cd $HOME/tst18
  # vi test/mod01.js
  
  コマンドの実行結果
  --------------------------------------------------
  class Person1 {
    constructor(name) {
      this._name = name;
    }
    get name() {
      return this._name;
    }
    set name(name) {
      this._name = name;
    }
  }
  
  module.exports = Person1;
  --------------------------------------------------
  
  # cd $HOME/tst18
  # vi test/mod02.js
  
  コマンドの実行結果
  --------------------------------------------------
  class Person2 {
    constructor(name) {
      this._name = name;
    }
    get name() {
      return this._name;
    }
    set name(name) {
      this._name = name;
    }
  }
  
  module.exports = Person2;
  --------------------------------------------------
  
  # cd $HOME/tst18
  # vi test01.js
  
  コマンドの実行結果
  --------------------------------------------------
  const expect = require('chai').expect;
  const assert = require('chai').assert;
  const Person1 = require('./test/mod01');
  const Person2 = require('./test/mod02');
  
  describe('mod01.js', () => {
    describe('myFunc', () => {
      it('P1 is instance of Person1', () => {
        let P1 = new Person1('AAA');
        assert.instanceOf(P1, Person1);
      });
      it('P2 is instance of Person1', () => {
        let P2 = new Person1('BBB');
        expect(P2).to.be.an.instanceOf(Person1);
      });
      it('P3 is not instance of Person1', () => {
        let P3 = new Person2('CCC');
        assert.notInstanceOf(P3, Person1);
      });
      it('P4 is not instance of Person1', () => {
        let P4 = new Person2('DDD');
        expect(P4).to.not.be.an.instanceOf(Person1);
      });
    });
  });
  --------------------------------------------------
  
  $ cd $HOME/tst18
  $ vi package.json
  
  コマンドの実行結果
  --------------------------------------------------
  {
    "name": "tst18",
    "version": "1.0.0",
    "description": "mocha test",
    "main": "index.js",
    "scripts": {
      "test": "./node_modules/.bin/mocha test01.js --reporter spec"  // テスト時は「npm test」を実行
    },
    "author": "Makoto-Araki",
    "license": "ISC",
    "dependencies": {
      "chai": "^4.3.6",
      "mocha": "^10.0.0"
    }
  }
  --------------------------------------------------
  
  $ cd $HOME/tst18
  $ npm test
  
  コマンドの実行結果
  --------------------------------------------------
  > tst18@1.0.0 test
  > ./node_modules/.bin/mocha test01.js --reporter spec
  
  mod01.js
    myFunc
      ✔ P1 is instance of Person1
      ✔ P2 is instance of Person1
      ✔ P3 is not instance of Person1
      ✔ P4 is not instance of Person1
  
  4 passing (26ms)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[019]
  Run Functional Tests on API Endpoints using Chai-HTTP
  
[内容]
  API試験(1)
  
[確認]
  別ファイル「web32.txt」の「X10」を参照
  
================================================================================
[020]
  Run Functional Tests on API Endpoints using Chai-HTTP II
  
[内容]
  API試験(2)
  
[確認]
  別ファイル「web32.txt」の「X10」を参照
  
================================================================================
[021]
  Run Functional Tests on an API Response using Chai-HTTP III - PUT method
  
[内容]
  API試験(3)
  
[確認]
  別ファイル「web32.txt」の「X10」を参照
  
================================================================================
[022]
  Run Functional Tests on an API Response using Chai-HTTP IV - PUT method
  
[内容]
  上記「21」の復習
  
[確認]
  上記「21」を参照
  
================================================================================
[023]
  Simulate Actions Using a Headless Browser
  
[内容]
  ヘッドレスブラウザで画面操作をシミュレート
  
[確認]
  別ファイル「web32.txt」の「X13」を参照
  
================================================================================
[024]
  Run Functional Tests using a Headless Browser
  
[内容]
  上記「23」の復習
  
[確認]
  上記「23」を参照
  
================================================================================
[025]
  Run Functional Tests using a Headless Browser II
  
[内容]
  上記「23」の復習
  
[確認]
  上記「23」を参照
  
================================================================================
