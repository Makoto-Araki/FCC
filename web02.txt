================================================================================
[01] Change the Color of Text
[02] Use CSS Selectors to Style Elements
[03] Use a CSS Class to Style an Element
[04] Style Multiple Elements with a CSS Class
[05] Change the Font Size of an Element
[06] Set the Font Family of an Element
[07] Import a Google Font
[08] Specify How Fonts Should Degrade
[09] Size Your Images
[10] Add Borders Around Your Elements
[11] Add Rounded Corners with border-radius
[12] Make Circular Images with a border-radius
[13] Give a Background Color to a div Element
[14] Set the id of an Element
[15] Use an id Attribute to Style an Element
[16] Adjust the Padding of an Element
[17] Adjust the Margin of an Element
[18] Add a Negative Margin to an Element
[19] Add Different Padding to Each Side of an Element
[20] Add Different Margins to Each Side of an Element
[21] Use Clockwise Notation to Specify the Padding of an Element
[22] Use Clockwise Notation to Specify the Margin of an Element
[23] Use Attribute Selectors to Style Elements
[24] Understand Absolute versus Relative Units
[25] Style the HTML Body Element
[26] Inherit Styles from the Body Element
[27] Prioritize One Style Over Another
[28] Override Styles in Subsequent CSS
[29] Override Class Declarations by Styling ID Attributes
[30] Override Class Declarations with Inline Styles
[31] Override All Other Styles by using Important
[32] Use Hex Code for Specific Colors
[33] Use Hex Code to Mix Colors
[34] Use Abbreviated Hex Code
[35] Use RGB values to Color Elements
[36] Use RGB to Mix Colors
[37] Use CSS Variables to change several elements at once
[38] Create a custom CSS Variable
[39] Use a custom CSS Variable
[40] Attach a Fallback value to a CSS Variable
[41] Imrove Compatibility with Browser Fallbacks
[42] Inherit CSS Variables
[43] Change a variable for a specific area
[44] Use a media query to change a variable
================================================================================
[01]
  Change the Color of Text
  
[内容]
  属性「style」で文字色を変更
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- 属性「style」で文字色を変更 --->
  <p style='color: blue;'>String1</p>
  <p style='color: blue;'>String2</p>
  
  <!-- CSS --->
  <style></style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[02]
  Use CSS Selectors to Style Elements

[内容]
  要素「style」で文字色を変更
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <p id='P1'>String1</p>
  <p id='P2'>String2</p>
  
  <!-- CSS --->
  <style>
    
    #P1 {
      color: blue;
    }

    #P2 {
      color: blue;
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[03]
  Use a CSS Class to Style an Element

[内容]
  属性「class」で文字色を変更
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <p class='AAA'>String1</p>
  <p class='AAA'>String2</p>
  <p class='BBB'>String3</p>
  
  <!-- CSS --->
  <style>
    
    .AAA {
      color: blue;              /* 文字色変更 */
      font-size: 1.2em;         /* 文字サイズ変更 */
      font-family: sans-serif;  /* フォント変更 */
    }
    
    /* ダウンロード */
    @import url(https://fonts.googleapis.com/earlyaccess/sawarabimincho.css);
    
    /* フォント適用順 */
    .BBB {
      font-family: 'Sawarabi Mincho', sans-serif;
    }
    
  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[04]
  Style Multiple Elements with a CSS Class

[内容]
  属性「class」で複数の要素を変更
  
[確認]
  // 上記「03」を参照
  
================================================================================
[05]
  Change the Font Size of an Element

[内容]
  プロパティ「font-size」で文字サイズを変更
  
[確認]
  // 上記「03」を参照
  
================================================================================
[06]
  Set the Font Family of an Element
  
[内容]
  プロパティ「font-family」でフォント変更
  
[確認]
  // 上記「03」を参照
  
================================================================================
[07]
  Import a Google Font
  
[内容]
  ネットからフォントを取得してフォント変更
  
[確認]
  // 上記「03」を参照
  
================================================================================
[08]
  Specify How Fonts Should Degrade
  
[内容]
  フォントの適用順を指定
  
[確認]
  // 上記「03」を参照
  
================================================================================
[09]
  Size Your Images
  
[内容]
  プロパティ「width」で画像サイズ変更 => 画像の縦横比は自動調整
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <img class='AAA' src='https://cdn.icon-icons.com/icons2/836/PNG/512/Android_icon-icons.com_66772.png'>
  <img class='AAA' src='https://cdn.icon-icons.com/icons2/836/PNG/512/Twitter_icon-icons.com_66803.png'>
  
  <!-- CSS --->
  <style>
    
    img {
      display: block;
    }
    
    .AAA {
      width: 100px;
    }
    
  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[10]
  Add Borders Around Your Elements
  
[内容]
  画像の枠線(border)
    border-color: 枠線の色
    border-width: 枠線の幅
    border-style: 枠線の線種
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <img class='AAA' src='https://cdn.icon-icons.com/icons2/836/PNG/512/Android_icon-icons.com_66772.png'>
  <img class='AAA' src='https://cdn.icon-icons.com/icons2/836/PNG/512/Twitter_icon-icons.com_66803.png'>
  
  <!-- CSS --->
  <style>
    
    img {
      display: block;
      width: 100px;
    }

    .AAA {
      border-color: red;    /* 罫線の色 */
      border-width: 2px;    /* 罫線の幅 */
      border-style: solid;  /* 罫線の線種 */
      border-radius: 10px;  /* 画像に丸みを付与 => 値を「50%」に指定で円形に加工*/
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[11]
  Add Rounded Corners with border-radius
  
[内容]
  プロパティ「border-radius」で画像に丸みを付与
  
[確認]
  // 上記「10」を参照
  
================================================================================
[12]
  Make Circular Images with a border-radius
  
[内容]
  プロパティ「border-radius」に「50%」を指定して画像を円形に加工
  
[確認]
  // 上記「10」を参照
  
================================================================================
[13]
  Give a Background Color to a div Element
  
[内容]
  プロパティ「background-color」で背景色を変更
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <div id='AAA'></div>
  
  <!-- CSS --->
  <style>
    
    #AAA {
      width: 100px;
      height: 100px;
      background-color: CornFlowerBlue;
    }
    
  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[14]
  Set the id of an Element
  
[内容]
  属性「id」を指定
  
[確認]
  // 上記「13」を参照
  
================================================================================
[15]
  Use an id Attribute to Style an Element
  
[内容]
  属性「id」で要素を操作
  
[確認]
  // 上記「13」を参照
  
================================================================================
[16]
  Adjust the Padding of an Element
  
[内容]
  プロパティ「padding」で内部余白を調節
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <div id='Container'>
    <p id='Item1'>Item1</p>
    <p id='Item2'>Item2</p>
    <p id='Item3'>Item3</p>
  </div>
  
  <!-- CSS --->
  <style>
    
    #Container {
      border: 2px solid Black;
      width: 200px;
      height: 200px;
      background-color: CornFlowerBlue;
    }

    #Item1 {
      border: 2px solid White;
      font-size: 20px;
      text-align: center;
      color: White;
      background-color: Crimson;
      padding: 5px;
      margin: 5px;
    }

    #Item2 {
      border: 2px solid White;
      font-size: 20px;
      text-align: center;
      color: White;
      background-color: Crimson;
      padding: 10px;
      margin: 10px;
    }

    #Item3 {
      border: 2px solid White;
      font-size: 20px;
      text-align: center;
      color: White;
      background-color: Crimson;
      padding: 15px;
      margin: 15px;
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[17]
  Adjust the Margin of an Element

[内容]
  プロパティ「margin」で外部余白を調節
  
[確認]
  // 上記「16」を参照
  
================================================================================
[18]
  Add a Negative Margin to an Element

[内容]
  外部余白に負数を指定 => 動きが予測困難
  
[確認]
  // 省略
  
================================================================================
[19]
  Add Different Padding to Each Side of an Element
  
[内容]
  内部余白でコンテンツの位置を調整する
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <div class='Box' id='Container'>
    <p class='Box' id='Item1'>Item1</p>
    <p class='Box' id='Item2'>Item2</p>
  </div>
  
  <!-- CSS --->
  <style>
    
    .Box {
      color: White;
      border: 2px solid Black;
      text-align: center;
    }

    #Container {
      color: White;
      background-color: Yellow;
      padding: 10px;
    }

    #Item1 {
      color: White;
      background-color: Crimson;
      padding: 20px 0px 20px 20px;  /* 上 右 下 左 */
      margin: 20px;
    }

    #Item2 {
      color: White;
      background-color: CornFlowerBlue;
      padding: 20px 20px 20px 20px;  /* 上 右 下 左 */
      margin: 20px;
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[20]
  Add Different Margins to Each Side of an Element
  
[内容]
  外部余白で要素の位置を調整
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <div class='Box' id='Container'>
    <p class='Box' id='Item1'>Item1</p>
    <p class='Box' id='Item2'>Item2</p>
  </div>
  
  <!-- CSS --->
  <style>
    
    .Box {
      color: White;
      border: 2px solid Black;
      text-align: center;
    }

    #Container {
      color: White;
      background-color: Yellow;
      padding: 10px;
    }

    #Item1 {
      color: White;
      background-color: Crimson;
      padding: 20px;
      margin: 20px 0px 20px 20px;  /* 上 右 下 左 */
    }

    #Item2 {
      color: White;
      background-color: CornFlowerBlue;
      padding: 20px;
      margin: 20px 20px 20px 20px;  /* 上 右 下 左 */
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[21]
  Use Clockwise Notation to Specify the Padding of an Element
  
[内容]
  内部余白を時計回りで一括指定
  
[確認]
  // 上記「19」を参照
  
================================================================================
[22]
  Use Clockwise Notation to Specify the Margin of an Element
  
[内容]
  外部余白を時計回りで一括指定
  
[確認]
  // 上記「20」を参照
  
================================================================================
[23]
  Use Attribute Selectors to Style Elements
  
[内容]
  属性セレクタ
    [type='text'] {...}
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <input type="text" placeholder="name">
  <input type="text" placeholder="addr">
  
  <!-- CSS --->
  <style>
    
    input[type='text'] {
      border: 2px solid Black;
      padding: 5px;
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[24]
  Understand Absolute versus Relative Units
  
[内容]
  長さ単位
    in  : インチ
    mm  : ミリ
    em  : 文字サイズに依存
    rem : 文字サイズに依存
  
[確認]
  // 省略
  
================================================================================
[25]
  Style the HTML Body Element

[内容]
  CSS継承(1)
    要素「body」の背景色を設定

[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <main></main>
  
  <!-- CSS --->
  <style>
    
    body {
      font-family: sans-serif;
      background-color: Black;
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[26]
  Inherit Styles from the Body Element

[内容]
  CSS継承(2)
    子孫の要素にプロパティ設定が伝搬

[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <h1>Hello World</h1>
  
  <!-- CSS --->
  <style>
    
    body {
      color: GreenYellow;
      font-family: sans-serif;
      background-color: Black;
    }
    
  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[27]
  Prioritize One Style Over Another

[内容]
  CSS継承(3)
    優先順位 => クラスセレクタ > 要素セレクタ
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <h1 class='AAA'>Hello World</h1>
  
  <!-- CSS --->
  <style>
    
    body {
      font-family: sans-serif;
      color: GreenYellow;
      background-color: Black;
    }

    .AAA {
      color: Pink;
      font-size: 1.2em;
    }
    
  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[28]
  Override Styles in Subsequent CSS
  
[内容]
  CSS継承(4)
    優先順位 => 後のクラスセレクタ > 前のクラスセレクタ
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <h1 class='AAA BBB'>Hello World</h1>
  
  <!-- CSS --->
  <style>
    
    body {
      font-family: sans-serif;
      color: GreenYellow;
      background-color: Black;
    }

    .AAA {
      color: Pink;
      font-size: 1.2em;
    }

    .BBB {
      color: CornFlowerBlue;
      font-size: 1.2em;
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[29]
  Override Class Declarations by Styling ID Attributes

[内容]
  CSS継承(5)
    優先度 => IDセレクタ > クラスセレクタ
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <h1 id='AAA' class='BBB CCC'>Hello World</h1>
  
  <!-- CSS --->
  <style>
    
    body {
      font-family: sans-serif;
      color: GreenYellow;
      background-color: Black;
    }

    #AAA {
      color: Orange;
      font-size: 1.2em;
    }

    .BBB {
      color: Pink;
      font-size: 1.2em;
    }

    .CCC {
      color: CornFlowerBlue;
      font-size: 1.2em;
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[30]
  Override Class Declarations with Inline Styles
  
[内容]
  CSS継承(6)
    優先度 => 属性「style」 > IDセレクタ＆クラスセレクタ

[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <h1 style='color: white;' id='AAA' class='BBB CCC'>Hello World</h1>
  
  <!-- CSS --->
  <style>
    
    body {
      font-family: sans-serif;
      background-color: Black;
      color: GreenYellow;
    }

    #AAA {
      color: Orange;
      font-size: 1.2em;
    }

    .BBB {
      color: Pink;
      font-size: 1.2em;
    }

    .CCC {
      color: CornFlowerBlue;
      font-size: 1.2em;
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[31]
  Override All Other Styles by using Important
  
[内容]
  CSS継承(7)
    優先度 => 強制適用「!important」
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <h1 style='color: white;' id='AAA' class='BBB CCC'>Hello World</h1>
  
  <!-- CSS --->
  <style>
    
    body {
      font-family: sans-serif;
      color: GreenYellow;
      background-color: Black;
    }

    #AAA {
      color: Orange;
      font-size: 1.2em;
    }

    .BBB {
      color: Pink !important;  /* 強制適用 */
      font-size: 1.2em;
    }

    .CCC {
      color: CornFlowerBlue;
      font-size: 1.2em;
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[32]
  Use Hex Code for Specific Colors
  
[内容]
  色を16進数コードで指定
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <p id='Item1'>Item1</p>
  <p id='Item2'>Item2</p>
  <p id='Item3'>Item3</p>
  <p id='Item4'>Item4</p>
  <p id='Item5'>Item5</p>
  
  <!-- CSS --->
  <style>
    
    body {
      font-family: sans-serif;
      background-color: White;
    }
    
    /* 内部にCSS変数を定義 */
    :root {
      
      /* カラー名 */
      --C01: Black;
      --C02: Red;
      --C03: Blue;
      --C04: Green;
      --C05: Yellow;
      
      /* 16進数コード */
      --C11: #000000;
      --C12: #FF0000;
      --C13: #0000FF;
      --C14: #008000;
      --C15: #FFFF00;
      
      /* 16進数コード(短縮形) */
      --C21: #000;
      --C22: #F00;
      --C23: #00F;
      --C24: #080;
      --C25: #FF0;
      
      /* RGB関数 */
      --C31: rgb(0, 0, 0);
      --C32: rgb(255, 0, 0);
      --C33: rgb(0, 0, 255);
      --C34: rgb(0, 128, 0);
      --C35: rgb(255, 255, 0);
      
      /* 別セレクタで上書き用 */
      --TMP: AAA;

    }
    
    #Item1 {
      color: Gray;              /* ブラウザ未対応に備えて予め設定 */
      color: var(--C01, Gray);  /* カラー名 */
      color: var(--C11, Gray);  /* 16進数コード */
      color: var(--C21, Gray);  /* 16進数コード(短縮形) */
      color: var(--C31, Gray);  /* RGB関数 */
      --TMP: BBB;               /* CSS変数を上書き */
    }

    #Item2 {
      color: Gray;              /* ブラウザ未対応に備えて予め設定 */
      color: var(--C02, Gray);  /* カラー名 */
      color: var(--C12, Gray);  /* 16進数コード */
      color: var(--C22, Gray);  /* 16進数コード(短縮形) */
      color: var(--C32, Gray);  /* RGB関数 */
      --TMP: BBB;               /* CSS変数を上書き */
    }

    #Item3 {
      color: Gray;              /* ブラウザ未対応に備えて予め設定 */
      color: var(--C03, Gray);  /* カラー名 */
      color: var(--C13, Gray);  /* 16進数コード */
      color: var(--C23, Gray);  /* 16進数コード(短縮形) */
      color: var(--C33, Gray);  /* RGB関数 */
      --TMP: BBB;               /* CSS変数を上書き */
    }

    #Item4 {
      color: Gray;              /* ブラウザ未対応に備えて予め設定 */
      color: var(--C04, Gray);  /* カラー名 */
      color: var(--C14, Gray);  /* 16進数コード */
      color: var(--C24, Gray);  /* 16進数コード(短縮形) */
      color: var(--C34, Gray);  /* RGB関数 */
      --TMP: BBB;               /* CSS変数を上書き */
    }

    #Item5 {
      color: Gray;              /* ブラウザ未対応に備えて予め設定 */
      color: var(--C05, Gray);  /* カラー名 */
      color: var(--C15, Gray);  /* 16進数コード */
      color: var(--C25, Gray);  /* 16進数コード(短縮形) */
      color: var(--C35, Gray);  /* RGB関数 */
      --TMP: BBB;               /* CSS変数を上書き */
    }
    
  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
[33]
  Use Hex Code to Mix Colors
  
[内容]
  カラー名を16進数で表現
  
[確認]
  // 上記「32」を参照
  
================================================================================
[34]
  Use Abbreviated Hex Code
  
[内容]
  カラー名を16進数で表現(省略形)
  
[確認]
  // 上記「32」を参照
  
================================================================================
[35]
  Use RGB values to Color Elements
  
[内容]
  カラー名(black)をRGB関数で表現
  
[確認]
  // 上記「32」を参照
  
================================================================================
[36]
  Use RGB to Mix Colors
  
[内容]
  カラー名をRGB関数で表現
  
[確認]
  // 上記「32」を参照
  
================================================================================
[37]
  Use CSS Variables to change several elements at once
  
[内容]
  CSS変数
  
[確認]
  // 上記「32」を参照
  
================================================================================
[38]
  Create a custom CSS Variable
  
[内容]
  CSS変数名の接頭辞は「--」
  
[確認]
  // 上記「32」を参照
  
================================================================================
[39]
  Use a custom CSS Variable
  
[内容]
  CSS変数の呼出時はvar関数を使用
  
[確認]
  // 上記「32」を参照
  
================================================================================
[40]
  Attach a Fallback value to a CSS Variable
  
[内容]
  CSS変数の呼出失敗時の値を、var関数側で定義

[確認]
  // 上記「32」を参照
  
================================================================================
[41]
  Imrove Compatibility with Browser Fallbacks
  
[内容]
  CSS変数にブラウザが未対応の場合、CSS変数に先行して設定しておく
  
[確認]
  // 上記「32」を参照
  
================================================================================
[42]
  Inherit CSS Variables
  
[内容]
  疑似クラス「:root」
    ここで定義したCSS変数は全セレクタから使用可能
  
[確認]
  // 上記「32」を参照
  
================================================================================
[43]
  Change a variable for a specific area
  
[内容]
  疑似クラス「:root」
    ここで定義したCSS変数を別セレクタで上書き
  
[確認]
  // 上記「32」を参照
  
================================================================================
[44]
  Use a media query to change a variable
  
[内容]
  メディアクエリでCSS変数の切替
  
[確認]
  # cd /var/www/html
  # vi sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!doctype html>
  <html lang="ja">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>SAMPLE</title>
  </head>
  <body>
  
  <!-- HTML --->
  <div id='Container'></div>
  
  <!-- CSS --->
  <style>
    
    body {
      font-family: sans-serif;
      background-color: White;
    }
    
    /* CSS変数 */
    :root {
      --C01: Black;
      --C02: Red;
      --C03: Blue;
    }
    
    /* 横幅が600ピクセル未満 */
    @media screen and (max-width: 600px) {
      #Container {
        width: 100px;
        height: 100px;
        border: 2px solid var(--C01);
        background-color: var(--C02);
      }
    }
    
    /* 横幅が600ピクセル以上 */
    @media screen and (min-width: 600px) {
      #Container {
        width: 100px;
        height: 100px;
        border: 2px solid var(--C01);
        background-color: var(--C03);
      }
    }

  </style>
  
  <!-- JS --->
  <script></script>
  
  </body>
  </html>
  --------------------------------------------------
  
  # firefox
  # http://localhost/sample.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  確認完了!
  
================================================================================
